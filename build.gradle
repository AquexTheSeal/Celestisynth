buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "${project.modid}.refmap.json"
}

version = "${project.mc_ver}-1.0.0"
group = "com.aqutheseal.${project.modid}"
archivesBaseName = "${project.modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "${project.parchment}-${project.mc_ver}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${project.modid}.mixins.json"
            args '--username', 'AquDev####'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.enabledGameTestNamespaces', "${project.modid}"

            mods {
                celestisynth {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${project.modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.enabledGameTestNamespaces', "${project.modid}"

            mods {
                celestisynth {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${project.modid}.mixins.json"

            property 'forge.enabledGameTestNamespaces', "${project.modid}"

            mods {
                celestisynth {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${project.modid}.mixins.json"

            args '--mod', "${project.modid}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                celestisynth {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    ext.refMap = "main.refmap.json"
}

repositories {
    maven {
        name "Geckolib Maven"
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name "KosmX's Maven"
        url 'https://maven.kosmx.dev/'
    }
    maven {
        name = "CurseMaven Maven"
        url = "https://www.cursemaven.com"
    }
    maven {
        name "progwm's Maven"
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    // TODO: Refractor and move some stuff to [gradle.properties]...

    minecraft "net.minecraftforge:forge:${project.mc_ver}-${project.fg_ver}"

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.40')
    implementation fg.deobf("curse.maven:playeranimator-658587:4418149")
    implementation fg.deobf("curse.maven:better-combat-by-daedelus-639842:4534619")
    implementation fg.deobf("curse.maven:cloth-config-348521:3972423")

    implementation fg.deobf("mezz.jei:jei-${project.mc_ver}-forge:11.6.0.1016")

    // EXTRA GOODS (Not going to use these for [gradle.properties] since I can just remove these anytime I want to.)

    //implementation fg.deobf("curse.maven:rubidium-574856:4448053")
    //implementation fg.deobf("curse.maven:oculus-581495:4451142")
    implementation fg.deobf("curse.maven:mmmmmmmmmmmm-225738:4410143")
    implementation fg.deobf("curse.maven:selene-499980:4620027")
    implementation fg.deobf("curse.maven:l_ender-s-cataclysm-551586:4646625")
    implementation fg.deobf("curse.maven:citadel-331936:4556677")

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${project.modid}",
                "Specification-Vendor"    : "aqutheseal",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "aqutheseal",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${project.modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "${project.modid}.refmap.json"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
