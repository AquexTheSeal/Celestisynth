plugins {
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = "${mc_version}-${mod_version}"
group = mod_group
archivesBaseName = modid

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mappings_channel, version: mappings_version
    
    copyIdeResources = true

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            //jvmArgs "-XX:+AllowEnhancedClassRedefinition", "-XX:HotswapAgent=fatjar"
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        client { property 'forge.enabledGameTestNamespaces', modid }
        server { property 'forge.enabledGameTestNamespaces', modid }
        gameTestServer { property 'forge.enabledGameTestNamespaces', modid }

        data {
            args '--mod', modid, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    ext.refMap = "main.refmap.json"
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
    config "${modid}.mixins.json"

    debug.export = true
}

repositories {
    maven {
        name = "CurseMaven Maven"
        url = "https://www.cursemaven.com"
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name "Geckolib Maven"
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name "KosmX Maven"
        url 'https://maven.kosmx.dev/'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6's Maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "BlameJared Maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
		name = "RyanLiptak Maven"
		url = "https://maven.ryanliptak.com/"
    }
}

dependencies {
    // Base
    minecraft("net.minecraftforge:forge:${mc_version}-${forge_version}")
    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")

    // Dependencies (Required)
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.19:${geckolib_version}")
    implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}")

    // Dependencies (Extras)
    implementation fg.deobf("curse.maven:better-combat-by-daedelus-639842:4534619")
    implementation fg.deobf("curse.maven:cloth-config-348521:3972423")

    implementation fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_version}")
    implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:${jeed_version}")

    implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
    implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")
    implementation fg.deobf("curse.maven:gamemenumodoption-353051:${gmmo_version}")

    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")

    compileOnly fg.deobf("squeek.appleskin:appleskin-forge:${appleskin_version}:api")
    runtimeOnly fg.deobf("squeek.appleskin:appleskin-forge:${appleskin_version}")

    runtimeOnly fg.deobf("curse.maven:shutup-experimental-settings-407174:${sues_version}")
    runtimeOnly fg.deobf("curse.maven:lazy-dfu-forge-460819:${lazydfu_version}")

    // Dependencies (Extrass) (Temp)
    implementation fg.deobf("curse.maven:mmmmmmmmmmmm-225738:4410143")
    implementation fg.deobf("curse.maven:selene-499980:4620027")
    implementation fg.deobf("curse.maven:l_ender-s-cataclysm-551586:4646625")
    implementation fg.deobf("curse.maven:citadel-331936:4556677")

//    implementation fg.deobf("curse.maven:supplementaries-412082:4713347")
//    runtimeOnly fg.deobf('curse.maven:ferritecore-429235:4117906')
//    implementation fg.deobf("curse.maven:rubidium-574856:4568727")
//    implementation fg.deobf("curse.maven:oculus-581495:4578731")
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            modid: modid, mod_name: mod_name, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description, mc_version: mc_version,
            mc_version_range: mc_version_range, forge_version_range: forge_version_range,
            geckolib_version_range: geckolib_version_range, player_animator_version_range: player_animator_version_range,
            jei_version_range: jei_version_range, jer_version_range: jer_version_range, jeed_version_range: jeed_version_range, lazydfu_version_range: lazydfu_version_range,
            configured_version_range: configured_version_range, catalogue_version_range: catalogue_version_range, gmmo_version_range: gmmo_version_range,
            jade_version_range: jade_version_range, appleskin_version_range: appleskin_version_range, sues_version_range: sues_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : mod_version,
                'Implementation-Title'    : mod_name,
                'Implementation-Version'  : mod_version,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs'		  	  : "${modid}.mixins.json"
        ])
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}